#!/usr/bin/env node
!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(require("chalk"),require("child_process"),require("fs/promises"),require("path"),require("express"),require("http"),require("socket.io"),require("chokidar"),require("@babel/traverse"),require("@babel/core"),require("fs"),require("commander")):"function"==typeof define&&define.amd?define(["chalk","child_process","fs/promises","path","express","http","socket.io","chokidar","@babel/traverse","@babel/core","fs","commander"],n):n((e="undefined"!=typeof globalThis?globalThis:e||self).chalk,e.child_process,e.promises,e.path,e.express,e._http,e.socket_io,e.chokidar,e.traverse,e.core,e.fs,e.commander)}(this,(function(e,n,o,r,t,i,c,a,s,l,u,d){"use strict";var p="";async function f(){var e=JSON.parse((await o.readFile(r.join(p,"pls.json"))).toString());return e.type||(e.type="script"),e}function m(e){p=e}function h(){return p}function g(n){o.writeFile(r.join(h(),"game.d.ts"),n,"utf-8"),console.log(e.gray("[*] Update game.d.ts from server"))}async function y(e,n){var t=0;function i(e){const n=e.split(".");return"js"!=n[n.length-1]&&(e+=".js"),e}function c(e,n){const o=[],r=function(e,n){const o=u.readFileSync(i(e)).toString();return l.parseSync(o,{sourceType:"module"==n?"module":"script"})}(e,n);if(!r)throw new Error("Cannot parse ast at "+e);s(r,{ImportDeclaration({node:e}){o.push(e.source.value)}});const c=t++,a=l.transformFromAstSync(r,u.readFileSync(i(e)).toString(),{presets:["env"]});if(!a)throw new Error("Cannot parse ast at "+e);const{code:d}=a;if(!d)throw new Error("Cannot get code from "+e);return{code:d,id:c,filename:e,dependencies:o,mapping:{}}}var a=function(e){let n="";return e.forEach((e=>{n+=`${e.id}: [function (require, module, exports) { ${e.code} },${JSON.stringify(e.mapping)},],`})),`(function(modules) {function require(id) {const [fn, mapping] = modules[id];function localRequire(name) {return require(mapping[name]);}const module = { exports : {} };fn(localRequire, module, module.exports); return module.exports;}require(0);})({${n}})`}(function(e,n){const o=[c(e,n)];for(const e of o){e.mapping={};const t=r.dirname(e.filename);e.dependencies.forEach((i=>{const a=c(r.join(t,i),n);e.mapping[i]=a.id,o.push(a)}))}return o}(r.join(n,e.entry),e.type));return await o.writeFile(r.join(n,e.dist),a,"utf-8"),a}async function w(n,o,r){const t=await y(n,o);console.log(e.gray("[+] Code bundled")),r.emit("change",t)}async function b(o){const t=await f(),i=h();a.watch(r.join(i,t.watch)).on("change",((r,c)=>{!function(o,r,t){console.log(e.gray("[*] Watch file changed")),o.beforeBundle?n.exec(`cd ${h()} && ${o.beforeBundle}`,(async(e,n,i)=>{if(e)throw e;n&&console.log(n),i&&console.error(i),w(o,r,t)})):w(o,r,t)}(t,i,o)}))}function v(n,o){return new Promise((r=>{const a=t(),s=i.createServer(a),l=new c.Server(s,{cors:{origin:"https://view.dao3.fun"}});var u=!1;a.get("/",((e,n)=>{n.json({pls:!0,version:"1.0.0"})})),function n(){l.once("connection",(r=>{const t=r.handshake.auth;if(t.mapId!=o)return r.disconnect(),console.warn(e.yellow(`[!] Map(${t.mapId}) tried to connect but reject.`)),void n();console.log(e.gray(`[i] Connected with map(${o}).`)),function(e){e.on("fetchDeclaretion",g)}(r),u||(u=!0,b(l)),r.on("disconnect",(()=>{console.log(e.gray("[i] Disconnected")),n()}))}))}(),s.listen(n,(()=>{console.log(e.gray(`[i] Local server run on port ${n}.`)),console.log(e.gray("[i] You can install browser GM extension at https://unpkg.com/pro-local-scripting/")),r()}))}))}d.program.name("Pro Local Scripting").version("1.0.0").argument("<scripting-dictionary>").action((o=>{m(o),async function(){const n=h();if(!n)throw new Error(e.red("\nPlease enter script path!\nSee more at https://github.com/bcmRayCrazy-coder/pro-local-scripting/blob/main/README.md#Use"));if(!u.existsSync(n))throw new Error(e.red("Invalid path "+n));if(!u.existsSync(r.join(n,"pls.json")))throw new Error(e.red("\nCannot find config file!\nSee more at https://github.com/bcmRayCrazy-coder/pro-local-scripting/blob/main/README.md#Configure"))}().then((async function(){console.log(e.bold.green("Launching Pro Local Scripting"));const o=await f();await v(o.port,o.mapId),n.exec("code "+h(),((n,o,r)=>{n?console.error(e.red('Unable to launch Visual Studio Code!\nPlease press "F1" and enter " > Shell Command: Install \'code\' command in PATH "\nYou have to open it manually this time.')):console.log(e.gray("[i] Launched Workspace"))}))}))})).parse()}));
